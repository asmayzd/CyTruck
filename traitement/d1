#!/bin/bash

# Assurer que le script d1 a les permissions d'exécution
chmod 777 traitement/d1

# Définition de la fonction d1
d1() {
    
	# Enregistrez le temps de début.
        debut_timer_d1=$(date +%s)

# Compter le nombre de trajets pour chaque conducteur
    awk -F";" '/;1;/ {compteur[$6] += 1} END {for (nom in compteur) print compteur[nom], nom}' data/data.csv | sort -nrk1,1 | head -10 > temp/temp_d1.csv

#Afficher les résultats
    cat temp/temp_d1.csv

fin_timer_d1=$(date +%s)

        # Calculer la durée totale en secondes.
        duree_option_d1=$((fin_timer_d1 - debut_timer_d1))

        # Afficher la durée.
        echo  "Le traitement de l'option -d1 a pris $duree_option_d1 secondes."
	
	# Créer un fichier de données pour l'histogramme
    awk '{print $2 " " $3 "," $1}' temp/temp_d1.csv | sort -t',' -k2,2n > temp/histogram_data.csv

    # Appel de la fonction pour tracer le graphique
    generate_d1

	# Ouvre automatiquement l'image du graphique
        display images/graphique_d1.png

}

generate_d1() {
    # Vérification si le fichier existe
if [ ! -f "temp/histogram_data.csv" ]; then
    echo "Le fichier 'temp/histogram_data.csv' n'existe pas."
    exit 1
fi

        # Création du fichier de commandes pour Gnuplot
        gnuplot <<- GNUPLOT_SCRIPT
        set datafile separator ","
        set terminal pngcairo
        set output 'images/graphique_d1.png'

        set style fill solid  
        unset key             

        set boxwidth 0.5
        set offsets 0,0,0.5-0.5/2,0.5
        set yrange [0:*]  
        set title 'Graphique -d1'
        set ylabel 'Noms des conducteurs'
        set xlabel 'Nombre de trajets'
		

        plot 'temp/histogram_data.csv' using (0.5*column(2)):0:(0.5*column(2)):(0.5/2.):(column(0)+1):ytic(1) with boxxy lc var
GNUPLOT_SCRIPT

}
# Appel de la fonction d1
d1

